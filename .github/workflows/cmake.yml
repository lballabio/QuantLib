name: CMake build
on: [push, pull_request]
jobs:
  cmake-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup
      run: |
        sudo apt update
        sudo apt install -y libboost-dev ccache ninja-build
    - name: Cache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: cmake-linux-ci-build-${{ github.ref }}
        restore-keys: |
          cmake-linux-ci-build-${{ github.ref }}
          cmake-linux-ci-build-refs/heads/master
          cmake-linux-ci-build-
    - name: Compile
      run: |
        mkdir build
        cd build
        cmake .. -GNinja -DBOOST_ROOT=/usr -DCMAKE_BUILD_TYPE=Release -DQL_COMPILE_WARNING_AS_ERROR=ON -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -L
        cmake --build . --verbose
        sudo cmake --install .
        sudo ldconfig
    - name: Test
      run: |
        quantlib-test-suite --log_level=message
  cmake-linux-with-options:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup
      run: |
        sudo apt update
        sudo apt install -y libboost-all-dev ccache ninja-build
    - name: Cache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: cmake-linux-ci-opts-${{ github.ref }}
        restore-keys: |
          cmake-linux-ci-opts-${{ github.ref }}
          cmake-linux-ci-opts-refs/heads/master
          cmake-linux-ci-opts-
    - name: Compile
      run: |
        cmake --preset linux-ci-build-with-nonstandard-options -L
        cmake --build --preset linux-ci-build-with-nonstandard-options --verbose
        sudo cmake --build --preset linux-ci-build-with-nonstandard-options --target install
    - name: Test
      run: |
        quantlib-test-suite --log_level=message
  cmake-win:
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v3
    - name: Cache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: cmake-windows-ci-build-${{ github.ref }}
        restore-keys: |
          cmake-windows-ci-build-${{ github.ref }}
          cmake-windows-ci-build-refs/heads/master
          cmake-windows-ci-build-
        variant: sccache
    - name: Setup
      run: |
        $Url = "https://boostorg.jfrog.io/artifactory/main/release/1.82.0/binaries/boost_1_82_0-msvc-14.3-64.exe"
        (New-Object System.Net.WebClient).DownloadFile($Url, "$env:TEMP\boost.exe")
        Start-Process -Wait -FilePath "$env:TEMP\boost.exe" "/SILENT","/SP-","/SUPPRESSMSGBOXES","/DIR=C:\local\boost"
        choco install -y ninja
    - name: Compile
      env:
        BOOST_ROOT: C:\local\boost
      shell: cmd
      run: |
        mkdir build
        cd build
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Vc\Auxiliary\Build\vcvarsall.bat" amd64 -vcvars_ver=14.3 || exit 1
        cmake .. -GNinja -DCMAKE_BUILD_TYPE=Release -DQL_COMPILE_WARNING_AS_ERROR=ON -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -L
        cmake --build . --verbose
        cmake --install .
        dir ql\*.lib
    - name: Test
      run: |
        & "C:\Program Files (x86)\QuantLib\bin\quantlib-test-suite" --log_level=message
  cmake-win-dynamic-runtime:
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v3
    - name: Cache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: cmake-windows-ci-dyn-build-${{ github.ref }}
        restore-keys: |
          cmake-windows-ci-dyn-build-${{ github.ref }}
          cmake-windows-ci-dyn-build-refs/heads/master
          cmake-windows-ci-dyn-build-
        variant: sccache
    - name: Setup
      run: |
        $Url = "https://boostorg.jfrog.io/artifactory/main/release/1.82.0/binaries/boost_1_82_0-msvc-14.3-64.exe"
        (New-Object System.Net.WebClient).DownloadFile($Url, "$env:TEMP\boost.exe")
        Start-Process -Wait -FilePath "$env:TEMP\boost.exe" "/SILENT","/SP-","/SUPPRESSMSGBOXES","/DIR=C:\local\boost"
        choco install -y ninja
    - name: Compile
      env:
        BOOST_ROOT: C:\local\boost
      shell: cmd
      run: |
        mkdir build
        cd build
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Vc\Auxiliary\Build\vcvarsall.bat" amd64 -vcvars_ver=14.3 || exit 1
        cmake .. -GNinja -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL -DCMAKE_BUILD_TYPE=Release -DQL_COMPILE_WARNING_AS_ERROR=ON -DCMAKE_CXX_COMPILER_LAUNCHER=sccache -L
        cmake --build . --verbose
        cmake --install .
        dir ql\*.lib
    - name: Test
      run: |
        & "C:\Program Files (x86)\QuantLib\bin\quantlib-test-suite" --log_level=message
  cmake-win-with-options:
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v3
    - name: Cache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: cmake-windows-ci-opts-${{ github.ref }}
        restore-keys: |
          cmake-windows-ci-opts-${{ github.ref }}
          cmake-windows-ci-opts-refs/heads/master
          cmake-windows-ci-opts-
        variant: sccache
    - name: Setup
      run: |
        $Url = "https://boostorg.jfrog.io/artifactory/main/release/1.82.0/binaries/boost_1_82_0-msvc-14.3-64.exe"
        (New-Object System.Net.WebClient).DownloadFile($Url, "$env:TEMP\boost.exe")
        Start-Process -Wait -FilePath "$env:TEMP\boost.exe" "/SILENT","/SP-","/SUPPRESSMSGBOXES","/DIR=C:\local\boost"
        choco install -y ninja
    - name: Compile
      env:
        BOOST_ROOT: C:\local\boost
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Vc\Auxiliary\Build\vcvarsall.bat" amd64 -vcvars_ver=14.3 || exit 1
        cmake --preset windows-ci-build-with-nonstandard-options -L
        cmake --build --preset windows-ci-build-with-nonstandard-options --verbose
        cmake --build --preset windows-ci-build-with-nonstandard-options --target install
    - name: Test
      run: |
        & "C:\Program Files (x86)\QuantLib\bin\quantlib-test-suite" --log_level=message
  cmake-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup
      run: |
        brew install boost ccache ninja
    - name: Cache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: cmake-macos-ci-${{ github.ref }}
        restore-keys: |
          cmake-macos-ci-${{ github.ref }}
          cmake-macos-ci-refs/heads/master
          cmake-macos-ci-
    - name: Compile
      env:
        CXXFLAGS: -stdlib=libc++ -mmacosx-version-min=10.9
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DQL_COMPILE_WARNING_AS_ERROR=ON -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -GNinja -L
        cmake --build . --verbose
        cmake --install .
    - name: Test
      run: |
        quantlib-test-suite --log_level=message
